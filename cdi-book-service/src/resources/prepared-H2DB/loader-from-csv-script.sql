--T_E_NOTE==========================================================================
DROP TABLE IF EXISTS T_E_NOTE ;
CREATE TABLE T_E_NOTE(
	 ID INT NOT NULL AUTO_INCREMENT
	,NAME VARCHAR(256)
	,ISHIDE boolean
);

INSERT INTO T_E_NOTE SELECT * FROM CSVREAD('C:\Users\rrnezh\programmer\git\java-ee-examples\cdi-book-service\src\resources\prepared-H2DB\T_E_NOTE.csv', null, 'charset=UTF-8');

select 
	ID
	,NAME
	,ISHIDE
from T_E_NOTE;

CREATE PRIMARY KEY ON T_E_NOTE (ID);

--T_E_NOTE_DETAIL==========================================================================

DROP TABLE IF EXISTS  T_E_NOTE_DETAIL ;
CREATE TABLE T_E_NOTE_DETAIL AS SELECT * FROM CSVREAD('C:\Users\rrnezh\programmer\git\java-ee-examples\cdi-book-service\src\resources\prepared-H2DB\T_E_NOTE_DETAIL.csv', null, 'charset=UTF-8');

select 
	ID
	,TEXT
	,LINK
from T_E_NOTE_DETAIL;

ALTER TABLE T_E_NOTE_DETAIL ALTER COLUMN ID  SET NOT NULL;
ALTER TABLE T_E_NOTE_DETAIL ALTER COLUMN ID  INT;

CREATE PRIMARY KEY ON T_E_NOTE_DETAIL (ID);

ALTER TABLE T_E_NOTE_DETAIL ADD FOREIGN KEY(ID) REFERENCES T_E_NOTE (ID) ON DELETE CASCADE ON UPDATE CASCADE;

--T_E_NOTE_TIMESTAMP==========================================================================

DROP TABLE IF EXISTS  T_E_NOTE_TIMESTAMP ;
CREATE TABLE T_E_NOTE_TIMESTAMP AS SELECT * FROM CSVREAD('C:\Users\rrnezh\programmer\git\java-ee-examples\cdi-book-service\src\resources\prepared-H2DB\T_E_NOTE_TIMESTAMP.csv', null, 'charset=UTF-8');

select
	ID
	,DATEADD
	,DATEEDIT
from T_E_NOTE_TIMESTAMP;

ALTER TABLE T_E_NOTE_TIMESTAMP ALTER COLUMN ID  SET NOT NULL;
ALTER TABLE T_E_NOTE_TIMESTAMP ALTER COLUMN ID  INT;

ALTER TABLE T_E_NOTE_TIMESTAMP ADD COLUMN DATEADD_TEMP  TIMESTAMP;
ALTER TABLE T_E_NOTE_TIMESTAMP ADD COLUMN DATEEDIT_TEMP  TIMESTAMP;

CREATE PRIMARY KEY ON T_E_NOTE_TIMESTAMP (ID);
ALTER TABLE T_E_NOTE_TIMESTAMP ADD FOREIGN KEY(ID) REFERENCES T_E_NOTE (ID) ON DELETE CASCADE ON UPDATE CASCADE;

SELECT
	ID
	,DATEADD
	,DATEEDIT
	,DATEADD_TEMP
	,DATEEDIT_TEMP
FROM T_E_NOTE_TIMESTAMP;

SELECT parsedatetime(DATEADD, 'dd-MM-yyyy hh:mm:ss') FROM T_E_NOTE_TIMESTAMP;
SELECT case when DATEEDIT = '' then null else parsedatetime(DATEEDIT, 'dd-MM-yyyy hh:mm:ss') end FROM T_E_NOTE_TIMESTAMP;

UPDATE T_E_NOTE_TIMESTAMP
	SET 
		DATEADD_TEMP =  parsedatetime(DATEADD, 'dd-MM-yyyy hh:mm:ss'),
		DATEEDIT_TEMP =  case when DATEEDIT = '' then null else parsedatetime(DATEEDIT, 'dd-MM-yyyy hh:mm:ss') end;

ALTER TABLE T_E_NOTE_TIMESTAMP DROP COLUMN DATEADD;
ALTER TABLE T_E_NOTE_TIMESTAMP DROP COLUMN DATEEDIT;

ALTER TABLE T_E_NOTE_TIMESTAMP ADD COLUMN DATEADD  TIMESTAMP;
ALTER TABLE T_E_NOTE_TIMESTAMP ADD COLUMN DATEEDIT  TIMESTAMP;

UPDATE T_E_NOTE_TIMESTAMP
	SET 
		DATEADD =  DATEADD_TEMP,
		DATEEDIT = DATEEDIT_TEMP;

ALTER TABLE T_E_NOTE_TIMESTAMP DROP COLUMN DATEADD_TEMP;
ALTER TABLE T_E_NOTE_TIMESTAMP DROP COLUMN DATEEDIT_TEMP;

SELECT
	ID
	,DATEADD
	,DATEEDIT
FROM T_E_NOTE_TIMESTAMP;

--T_E_USERS==========================================================================

DROP TABLE IF EXISTS T_E_USERS ;
CREATE TABLE T_E_USERS(
	 ID INT NOT NULL AUTO_INCREMENT
	,NAME VARCHAR(256)
	,PASS VARCHAR(100)
);

INSERT INTO T_E_USERS(ID,NAME, PASS) SELECT id,name, pass FROM CSVREAD('C:\Users\rrnezh\programmer\git\java-ee-examples\cdi-book-service\src\resources\prepared-H2DB\T_E_USERS.csv', null, 'charset=UTF-8');

select 
	ID
	,NAME
	,PASS
from T_E_USERS;

CREATE PRIMARY KEY ON T_E_USERS (ID);

--T_E_LINK_USER_NOTE==========================================================================

DROP TABLE IF EXISTS T_E_LINK_USER_NOTE ;
CREATE TABLE T_E_LINK_USER_NOTE(
	 ID INT NOT NULL AUTO_INCREMENT
	,ID_USER INT NOT NULL
	,ID_NOTE INT NOT NULL
);

INSERT INTO T_E_LINK_USER_NOTE(ID_USER, ID_NOTE) SELECT iduser, idnote FROM CSVREAD('C:\Users\rrnezh\programmer\git\java-ee-examples\cdi-book-service\src\resources\prepared-H2DB\T_E_LINK_USER_NOTE.csv', null, 'charset=UTF-8');

ALTER TABLE T_E_LINK_USER_NOTE ALTER COLUMN ID_USER SET NOT NULL;
ALTER TABLE T_E_LINK_USER_NOTE ALTER COLUMN ID_NOTE SET NOT NULL;

select 
	ID
	,ID_USER
	,ID_NOTE
from T_E_LINK_USER_NOTE;

CREATE PRIMARY KEY ON T_E_LINK_USER_NOTE (ID);

ALTER TABLE T_E_LINK_USER_NOTE ADD FOREIGN KEY(ID_USER) REFERENCES T_E_USERS (ID) ON DELETE CASCADE ON UPDATE CASCADE;

DELETE FROM T_E_NOTE WHERE ID IN (
SELECT ID FROM T_E_NOTE WHERE ID NOT IN (SELECT ID_NOTE FROM T_E_LINK_USER_NOTE));

DELETE FROM T_E_LINK_USER_NOTE WHERE ID_NOTE IN (
SELECT ID_NOTE FROM T_E_LINK_USER_NOTE WHERE ID_NOTE NOT IN (SELECT ID FROM T_E_LINK_USER_NOTE));

ALTER TABLE T_E_LINK_USER_NOTE ADD FOREIGN KEY(ID_NOTE) REFERENCES T_E_NOTE (ID) ON DELETE CASCADE ON UPDATE CASCADE;

ALTER TABLE T_E_LINK_USER_NOTE DROP PRIMARY KEY;
ALTER TABLE T_E_LINK_USER_NOTE ADD PRIMARY KEY(ID, ID_USER, ID_NOTE);

--T_E_TAG==========================================================================
DROP TABLE IF EXISTS T_E_TAG ;
CREATE TABLE T_E_TAG(
	 ID INT NOT NULL AUTO_INCREMENT
	,ID_NOTE INT NOT NULL
	,TAG VARCHAR(255) NOT NULL
);

CREATE PRIMARY KEY ON T_E_TAG (ID);
ALTER TABLE T_E_TAG ADD FOREIGN KEY(ID_NOTE) REFERENCES T_E_NOTE (ID) ON DELETE CASCADE ON UPDATE CASCADE;

SELECT * FROM T_E_TAG;